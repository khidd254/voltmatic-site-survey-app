name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: kivy/buildozer:latest
      options: --privileged

    steps:
    - uses: actions/checkout@v3

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build APK
      run: |
        # Create bin directory if it doesn't exist
        mkdir -p bin
        
        # Initialize buildozer if needed
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi
        
        # Build with verbose output
        echo "Starting build..."
        buildozer -v android debug 2>&1 | tee build.log
        
        # Check build result
        BUILD_RESULT=${PIPESTATUS[0]}
        
        # Create a summary of the build
        echo "=== Build Summary ===" > build-summary.txt
        echo "Build exit code: $BUILD_RESULT" >> build-summary.txt
        echo "\n=== Directory Structure ===" >> build-summary.txt
        find . -type d | sort >> build-summary.txt
        echo "\n=== Bin Directory Contents ===" >> build-summary.txt
        ls -la bin/ 2>/dev/null || echo "bin/ directory not found" >> build-summary.txt
        
        # Exit with build status
        if [ $BUILD_RESULT -ne 0 ]; then
          echo "Build failed with exit code $BUILD_RESULT"
          echo "\n=== Last 50 lines of build log ===" >> build-summary.txt
          tail -n 50 build.log >> build-summary.txt
          exit $BUILD_RESULT
        fi

    - name: Upload APK
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: voltmatic-apk
        path: |
          bin/*.apk
          build.log
          build-summary.txt
        if-no-files-found: warn
